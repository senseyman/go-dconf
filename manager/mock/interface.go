// Code generated by MockGen. DO NOT EDIT.
// Source: manager/interface.go
//
// Generated by this command:
//
//	mockgen -package mock -source manager/interface.go -destination manager/mock/interface.go
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// GetConfig mocks base method.
func (m *MockRepository) GetConfig(ctx context.Context, obj, defaultValue any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfig", ctx, obj, defaultValue)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetConfig indicates an expected call of GetConfig.
func (mr *MockRepositoryMockRecorder) GetConfig(ctx, obj, defaultValue any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfig", reflect.TypeOf((*MockRepository)(nil).GetConfig), ctx, obj, defaultValue)
}

// UpdateConfig mocks base method.
func (m *MockRepository) UpdateConfig(ctx context.Context, value any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateConfig", ctx, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateConfig indicates an expected call of UpdateConfig.
func (mr *MockRepositoryMockRecorder) UpdateConfig(ctx, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateConfig", reflect.TypeOf((*MockRepository)(nil).UpdateConfig), ctx, value)
}
